# Напишите программу, которая будет на вход принимать число N и выводить числа от -N до N

# Примеры:

# 5 -> -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5



# N = int(input('Введите N.\n'))
# for i in range(-N, N+1):
#     print(i, end=' ')

# создаем решение в одну строку
N = int(input('Введите N.\n'))
print(*[i for i in range(N*-1, N+1)]) # есть такое понятие как порядок действий
'''   * - это оператор распаковки, он убирает скобки у списка, распаковывает его  -5 -4 -3 -2 -1 0 1 2 3 4 5'''
''' без звездочки будет так [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]'''

# это тоже самое что 
'''сначала идет чем мы наполняем список, а затем как мы наполняем список'''
l = [i for i in range(N*-1, N+1) if i %2 == 0] # можно еще добавить, тогда в начальное i прилетят все четные числа
l = [i for i in range(N*-1, N+1)]   # тоже самое 1  объединили в одно

# for i in range(N*-1, N+1):        # тоже самое 2
#     l.append(i)                   # тоже самое 2
print(l)

# Вариант 2
print(' Введите число ')
#
N = int(input())
negative_n = N * (-1)
while negative_n < N +1:
    print(negative_n, end=' ') # -4 -3 -2 -1 0 1 2 3 4 
    negative_n += 1
#     l.append(negative_n)  
# print(l)                    # [-4, -3, -2, -1, 0, 1, 2, 3, 4]

# Вариант 3
N = int(input('Введите N.\n'))
N = N if N > 0 else N * -1
print(N)
for i in range(N * -1, N + 1):
    print(i, end=' ')

# Вариант 4
n = int(input('Введите число n: '))
n = abs(n) # Функция abs() используется для возврата абсолютного значения числа.
for i in range(-n, n +1):
    print(i, end=' ')

'''если мы передаем в круглых скобках 1 элемент то он к нам и вернется, если будет стоять запятая вернется картеж'''






'''Ссылочная модель'''
# i += 1 #
# i = i + 1 # когда мы говорим равно мы связываем нашу ссылку i быстрой памяти с объектом который хранится в куче медленной памяти
# все идеально работает с неизменяемыми типами данными 
# i = 5
# b = i
# i = 10 # с мутабельными типами данных, изменяемыми другой момент
# b = [1, 2, 3 ]
# i = b
# b.append(555) # b  берет нас список и в него добавляет, а ссылка то та же что и в i
# print (b)







