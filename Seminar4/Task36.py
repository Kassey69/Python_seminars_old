# Задание 3.
# Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет(по индексу).

# Пример:

# список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
# список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
# список: [], ищем: "123", ответ: -1

import random

def second_in(list, find): # создаем функцию по типу void, заполняем списком и искомым аргументом
    count = 0   # включаем счетчик
                                # https://pythonchik.ru/osnovy/python-range
    for i in range(len(list)): # перебирается цикл range  диапазон значений (len длины) списка, тут цикл идет по range
        #i = str(i)  #индексы списка должны быть целыми числами или срезами, а не str -- ОШИБКА!!!!!!!!!!
        if list[i] == find: # в цикле list ищем внутри каждого списка подсписок (индекс) list[i] = равный find
            count += 1 #  каждый раз когда мы находим искомый аргумент счетчик сприбавляет +1
            # нам нужно найти второе вхождение аргумента, и тут же выйти записав на каком месте он находится в списке
            if count == 2: 
                return i # как только получаем второе вхождение отправляем обратно позицию второго вхождения строки в списке
                # i начинается с 0 а не с 1
    if count < 2:
        return -1

list = list(map(str, input().split(', '))) #вводим значение str,
# с помощью split разделяем текст через пробел или другой знак, с помощью vfh присваиваем значение int/str/float
# map() — это встроенная функция, которая позволяет обрабатывать и 
# преобразовывать все элементы в итерируемом объекте без использования явного цикла for, 
find = input('Введите значение \n')
print(second_in(list, find))

# list = ["123", "234", "123", "567"]
# find = "123"
# print(second_in(list, find))





# value1 = 'as'
# value2 = 'sxascv acs asdf vsdg assd'
# n = 3
# def get_sec_entry(val1, val2):
#     start = val2.find(val1)
#     return val2.find(val1, start + 1)

# print(get_sec_entry(value1, value2))



